// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/rifannurmuhammad/02-movie-service/src/movie/domain"
	mock "github.com/stretchr/testify/mock"

	shared "github.com/rifannurmuhammad/02-movie-service/shared"
)

// MovieUseCase is an autogenerated mock type for the MovieUseCase type
type MovieUseCase struct {
	mock.Mock
}

// GetMovieDetail provides a mock function with given fields: id
func (_m *MovieUseCase) GetMovieDetail(id string) (domain.MovieDetail, error) {
	ret := _m.Called(id)

	var r0 domain.MovieDetail
	if rf, ok := ret.Get(0).(func(string) domain.MovieDetail); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(domain.MovieDetail)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMovies provides a mock function with given fields: param
func (_m *MovieUseCase) GetMovies(param domain.Parameters) ([]domain.Movies, shared.Meta, error) {
	ret := _m.Called(param)

	var r0 []domain.Movies
	if rf, ok := ret.Get(0).(func(domain.Parameters) []domain.Movies); ok {
		r0 = rf(param)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Movies)
		}
	}

	var r1 shared.Meta
	if rf, ok := ret.Get(1).(func(domain.Parameters) shared.Meta); ok {
		r1 = rf(param)
	} else {
		r1 = ret.Get(1).(shared.Meta)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(domain.Parameters) error); ok {
		r2 = rf(param)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}
